[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "waardhaven-math-engine"
version = "0.1.0"
description = "Pure mathematical engine for investment intelligence - WebAssembly ready"
readme = "README.md"
requires-python = ">=3.11"
authors = [
    {name = "Waardhaven AI", email = "ai@waardhaven.com"},
]
keywords = ["finance", "mathematics", "webassembly", "machine-learning", "optimization"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Financial and Insurance Industry",
    "Topic :: Office/Business :: Financial :: Investment",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "numpy>=1.24.0,<2.0.0",
    "scipy>=1.11.0,<2.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-benchmark>=4.0.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
]
wasm = [
    "pyodide-build>=0.24.0",
    "emscripten>=3.1.0",
]
visualization = [
    "matplotlib>=3.7.0",
    "plotly>=5.15.0",
]

[project.urls]
Homepage = "https://github.com/Ai-Whisperers/AI-Investment"
Repository = "https://github.com/Ai-Whisperers/AI-Investment"
Documentation = "https://docs.waardhaven.ai/math-engine"

[tool.setuptools.packages.find]
where = ["src"]
include = ["*"]

[tool.setuptools.package-dir]
"" = "src"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=85",
    "-v",
    "--tb=short",
]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/benchmarks/*",
    "*/examples/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]